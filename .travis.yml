# 언어와 jdk의 버전을 지정한다.
language: java
jdk:
  - openjdk11

# 어느 브랜치가 push 될 때 수행할지 지정한다.
# 오직 main 브랜치가 push될 때 수행하도록 지정하였다.
branches:
  only:
    - main

# 빌드 전에 gradlew의 권한을 추가한다.
before_install:
  - chmod +x gradlew

# Travis CI 서버의 Home
# gradle을 통하여 의존성을 받게 되면 이를 캐시하여 배포할 때 마다 다시 받지 않도록 설정한다.
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# main 브랜치에 push 되면 수행되는 명령어이다.
# 프로젝트 내에 권한이 추가된 gradlew를 활용하여 clean, build를 진행한다.
script: "./gradlew clean build"



before_deploy:
  # AWS CodeDeploy는 jar 파일 인식 불가능 - Zip 파일로 압축
  # 현재 위치 (프로젝트) 모든 파일을 압축
  - zip -r freelec-springboot2-webservice *
  # TravisCI가 실행중인 위치에서 dir 생성
  - mkdir -p deploy
  - mv freelec-springboot2-webservice.zip deploy/freelec-springboot2-webservice.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: freelec-springboot-build2
    region: ap-northeast-2
    skip_cleanup: true
    acl: private
    # 위에서 만든 deploy 디렉토리의 파일들만 S3로 전송
    local_dir: deploy
    wait-until-deployed: true
    on:
      all_branches: true

  - provider: codedeploy
      access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
      secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
      bucket: freelec-springboot-build2 # S3 버킷
      key: freelec-springboot2-webservice.zip # 빌드 파일을 압축해서 전달
      bundle_type: zip # 압축 확장자
      application: freelec-springboot2-webservice # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
      deployment_group: freelec-springboot2-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
      region: ap-northeast-2
      wait-until-deployed: true
      on:
        all_branches: true


# CI 실행 완료 시 작성한 이메일로 알람
notifications:
  email:
    recipients:
      - hansun33@naver.com